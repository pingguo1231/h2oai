// 
// Simple NPM support. 
//
// TODO: switch this to a plugin
//
import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'java'

def getOsSpecificCommandLine(args) {
  return Os.isFamily(Os.FAMILY_WINDOWS) ? [ 'cmd', '/c' ] + args : args
}

def checkPrerequisite(name) {
  def prefix = Os.isFamily(Os.FAMILY_WINDOWS) ? 'cmd /c ' : ''
  def command = prefix + name + ' -v'
  def proc
  try {
    proc = command.execute()
    if (proc != null) {
      proc.waitFor()
    }
  } catch(e) {
    return -1
  }
  if (proc == null || (proc != null && proc.exitValue() != 0)) {
    return -1
  }
  return 0
}

task checkClientPrerequisites {
  def nodeInstallationInstruction = """\
 
To install node.js, try one of these:

Mac OS:
Use the official installer at http://nodejs.org/download/
OR
If you have homebrew installed, run 'brew install node'.

Linux:
See https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager

Windows:
Use the official installer at http://nodejs.org/download/

"""
  
  def nodeFailureMessage = "Could not detect a node.js installation on this system.\nInstall node.js and try again.\n" + nodeInstallationInstruction
  def npmFailureMessage = "Could not find command 'npm'.\nRe-install node.js and try again.\n" + nodeInstallationInstruction
  
  if (checkPrerequisite('node') != 0) {
    if (Os.isFamily(Os.FAMILY_MAC)) {
      if (checkPrerequisite('/usr/local/bin/node') != 0) {
        throw new StopExecutionException(nodeFailureMessage)
      }
    } else {
      throw new StopExecutionException(nodeFailureMessage)
    }
  }
}

task installNpmPackages(type: Exec) {
  commandLine = getOsSpecificCommandLine([ 'npm', 'install' ])
}

task installBowerPackages(type: Exec) {
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    commandLine 'cmd', '/c', 'node_modules\\.bin\\bower', 'install'
  } else {
    if (project.hasProperty("h2o.web.allow.root")) {
        commandLine 'node_modules/.bin/bower', 'install', '--allow-root'
    } else {
        commandLine 'node_modules/.bin/bower', 'install'
    }
  }
}

task buildClientWithGulp(type: Exec) {
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    commandLine 'cmd', '/c', 'node_modules\\.bin\\gulp'
  } else {
    commandLine 'node_modules/.bin/gulp'
  }
  environment FLOW_DEPLOY_DIR: "$rootDir/build/resources/main/www/flow/"
}

task cleanClientWithGulp(type: Exec) {
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    commandLine 'cmd', '/c', 'node_modules\\.bin\\gulp', 'clean'
  } else {
    commandLine 'node_modules/.bin/gulp', 'clean'
  }
  ignoreExitValue = true
}

installNpmPackages.dependsOn checkClientPrerequisites
installBowerPackages.dependsOn installNpmPackages
buildClientWithGulp.dependsOn installBowerPackages
processResources.dependsOn buildClientWithGulp
cleanClientWithGulp.dependsOn installBowerPackages
clean.dependsOn cleanClientWithGulp

