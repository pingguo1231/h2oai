#!/bin/bash

set -x

RC=1
TESTNG_JAR_FILE=`find ~/.gradle/caches -name 'testng-6.8.jar' | head -1`
JCOMMANDER_JAR_FILE=`find ~/.gradle/caches -name 'jcommander-1.27.jar' | head -1`

JVM="nice java -ea -cp build/libs/test-h2o-core-0.1.0-SNAPSHOT.jar:../h2o-app/build/libs/h2o-app-0.1.0-SNAPSHOT.jar:${TESTNG_JAR_FILE}:${JCOMMANDER_JAR_FILE}"

JUNIT_TESTS_BOOT="water.api.APITest"

# Tests
JUNIT_TESTS="${JUNIT_TESTS_BOOT} water.AtomicTest water.KeyToString water.AutoBuffer2JSONTest water.fvec.FVecTest water.fvec.CBSChunkTest water.fvec.NewVectorTest water.fvec.VecStatsTest water.fvec.VecTest water.fvec.SparseTest water.fvec.TransfVecTest water.parser.DatasetCornerCasesTest water.parser.ParserTest water.parser.ParserTest2 water.parser.ParseTimeTest water.parser.ParseCompressedAndXLSTest water.TimelineTest"

# Too slow for normal junit runs
JUNIT_TESTS_SLOW="water.KVTest water.parser.ParseProgressTest"

OUTDIR=build/testMultiNode
rm -fr ${OUTDIR}
mkdir -p ${OUTDIR}

$JVM water.H2O 1> $OUTDIR/out.1 2>&1 &
PID_1=$!
echo PID_1 is ${PID_1}

$JVM water.H2O 1> $OUTDIR/out.2 2>&1 &
PID_2=$!
echo PID_2 is ${PID_2}

$JVM water.H2O 1> $OUTDIR/out.3 2>&1 &
PID_3=$!
echo PID_3 is ${PID_3}

$JVM water.H2O 1> $OUTDIR/out.4 2>&1 &
PID_4=$!
echo PID_4 is ${PID_4}

sleep 1
${JVM} -Dai.h2o.skipNodeCreation org.testng.TestNG src/test/resources/testng-multinode.xml 2>&1 | tee ${OUTDIR}/out.0

RC=${PIPESTATUS[0]}
echo $RC > $OUTDIR/status.0
cat $OUTDIR/status.0

cleanup () {
    echo "Cleaning up..."
    kill -9 ${PID_1} ${PID_2} ${PID_3} ${PID_4}
    exit $RC
}

trap cleanup SIGINT
cleanup
